# This program calls a insertBST function twice to insert two
# nodes into an existing binary search tree.
# The parameters to minBST are in %rdi and %rsi. 
# %rdi contains the address of the root node. %rsi contains the
# address of a node to insert.  A node contains three 8-byte
# fields: address of left node, address of right node, value of
# node.
#
# This program isn't for the faint-hearted.
# 
       .pos 0
       irmovq stack, %rsp
       irmovq node0, %rdi
       irmovq newN1, %rsi
       mrmovq 16(%rsi), %r14
       call insertBST
       irmovq node0, %rdi
       irmovq newN2, %rsi
       mrmovq 16(%rsi), %r14
       call insertBST
       halt   
#
insertBST: #address of root node is in %rdi
           #address of node to insert is in %rsi
           mrmovq 16(%rdi), %r13 #moves the values of the node to a r13
           subq %r14, %r13 #compares the node to the insertion node
           jge left #if root_node - insert_node >= 0 then go to left in BST
           jmp right #otherwise go right in BST
#
#Perform a check to see if left node exists, if not jump to insert_left
left: mrmovq 0(%rdi), %r12
      andq %r12, %r12
      je insert_left
      rrmovq %r12, %rdi
      jmp insertBST
#
#Perform a check to see if right node exists, if not jump to insert_right
right: mrmovq 8(%rdi), %r12
       andq %r12, %r12
       je insert_right
       rrmovq %r12, %rdi
       jmp insertBST
#
#insert the new node to the left of the current node
insert_left: rmmovq %rsi, 0(%rdi)
             jmp done
#
#insert the new node to the right of the current node
insert_right: rmmovq %rsi, 8(%rdi)
              jmp done
#
done:  ret
#
       .pos 0x200
node0: .quad node1    #address of left child
       .quad node2    #address of right child
       .quad 10       #value in the node
node1: .quad node3
       .quad 0 #should be modified to be newNd1 (0x290)
       .quad 4        
node2: .quad node4
       .quad node5
       .quad 15
node3: .quad 0
       .quad 0
       .quad 2       
node4: .quad 0  #should be modified to be newNd2 (0x2a8)
       .quad 0
       .quad 12
node5: .quad 0
       .quad 0
       .quad 20
newN1: .quad 0
       .quad 0
       .quad 5
newN2: .quad 0
       .quad 0
       .quad 11
       .pos 0x400
stack: .quad 0
